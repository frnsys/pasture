#!/bin/bash

# FUNCS
# ============================================
function random_name {
    # Generate a random username
    ADJ1=$(shuf -n 1 assets/adjectives.txt)
    ADJ2=$(shuf -n 1 assets/adjectives.txt)
    ANIM=$(shuf -n 1 assets/animals.txt)

    # - combine adjs and animal
    # - convert to lowercase
    # - convert spaces to underscores
    echo "${ADJ1}_${ADJ2}_${ANIM}" | tr '[:upper:]' '[:lower:]' | sed 's/\s/_/g'
}

function mkusers {
    # Make the specified number of users
    if [ -z $1 ]; then
        echo "Please specify how many users you want"
    else
        i=1
        while [ "$i" -le "$1" ]; do
            USER=$(random_name)

            # create user with defaults,
            # password is just the username
            useradd -ms /bin/bash -p $(openssl passwd -1 $USER) $USER
            mkdir /home/$USER/workshop
            chown -R $USER /home/$USER/workshop
            echo $USER >> pasture_users
            echo $USER

            i=$(($i + 1))
        done
    fi
}

function rmusers {
    if [ -f "pasture_users" ]; then
        while read USER; do
            userdel -r $USER
        done <pasture_users
        rm pasture_users
    else
        echo "file 'pasture_users' doesn't exist"
    fi
}

function lsusers {
    # List existing users
    # this roughly tries to list only "real" users
    cat /etc/passwd | grep '/home/' | grep 'bash' | cut -d: -f1
}

function inusers {
    # List users logged into jupyterhub
    ps ax | grep jupyter | grep -oP '(?<=--user=)([^\s]+)'
}

function unusers {
    # List unclaimed users
    # (users not logged into jupyterhub)
    grep -vf <(inusers) <(lsusers)
}

function mnusers {
    clear
    echo "Unclaimed users"
    echo "---------------"

    # save cursor position
    tput sc
    while true; do
        # show unclaimed users
        unusers | while read line; do
            echo -n $line
            # clear to end of line
            # (necessary if previously displayed line is longer than current line)
            tput el
            echo
        done

        # clear to end of display
        tput ed

        # restore cursor
        tput rc
        sleep 1
    done
}


# CMDS
# ============================================
if [ -z $1 ]
then
    echo -e "$(tput setaf 3)Tell me what to do...$(tput sgr0)"

elif [ $1 == 'mkusers' ]; then
    mkusers $2
elif [ $1 == 'rmusers' ]; then
    rmusers
elif [ $1 == 'lsusers' ]; then
    if [ -z $2 ]; then
        lsusers
    elif [ $2 == '-s' ]; then
        inusers
    elif [ $2 == '-u' ]; then
        unusers
    elif [ $2 == '-m' ]; then
        mnusers
    fi

else
    echo "Didn't recognize the command '${1}'"
fi